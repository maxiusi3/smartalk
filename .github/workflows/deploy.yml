name: Deploy SmarTalk to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run type checking
        run: npm run type-check
        
      - name: Run tests
        run: npm test
        
      - name: Run build test
        run: npm run build

  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Railway CLI
        run: npm install -g @railway/cli
        
      - name: Deploy to Railway
        run: railway up --service backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        working-directory: ./backend

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Vercel CLI
        run: npm install -g vercel
        
      - name: Deploy to Vercel
        run: |
          cd web
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-mobile:
    name: Build Mobile App
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd mobile
          npm ci
          
      - name: Build Android APK
        run: |
          cd mobile
          npx react-native build-android --mode=release
        if: false  # ÊöÇÊó∂Á¶ÅÁî®ÔºåÈúÄË¶ÅÈÖçÁΩÆÁ≠æÂêç
        
      - name: Build iOS IPA
        run: |
          cd mobile
          npx react-native build-ios --mode=release
        if: false  # ÊöÇÊó∂Á¶ÅÁî®ÔºåÈúÄË¶Å macOS runner

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Notify Success
        if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success'
        run: |
          echo "üéâ Deployment successful!"
          echo "Frontend: https://smartalk.vercel.app"
          echo "Backend: https://smartalk-backend.railway.app"
          
      - name: Notify Failure
        if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Please check the logs for details."
